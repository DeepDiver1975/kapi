#!/bin/sh
#
# Kopano API Daemon (kapid) launcher
#
# License: AGPL-3.0-only
# Copyright 2018 Kopano and its licensors
#

set -e

# Base defines.

EXE=/usr/libexec/kopano/kapid
DEFAULT_PLUGINS_PATH=/usr/lib/kopano/kapi-plugins
DEFAULT_OIDC_ISSUER_IDENTIFIER=https://localhost
DEFAULT_KOPANO_GRAPI_SOCKETS=/var/run/kopano-grapi
DEFAULT_PLUGIN_PUBS_SECRET_KEY_FILE=/etc/kopano/kapid-pubs-secret.key
DEFAULT_PLUGIN_KVS_DRIVERNAME=sqlite3
DEFAULT_PLUGIN_KVS_DB_DATASOURCE=/var/lib/kopano/kapi-kvs/kvs.db
DEFAULT_PLUGIN_KVS_DB_MIGRATIONS=/usr/lib/kopano/kapi-kvs/db/migrations

setup_env() {
	# Plugin grapi environment.

	KOPANO_GRAPI_SOCKETS="${KOPANO_GRAPI_SOCKETS:-${DEFAULT_KOPANO_GRAPI_SOCKETS}}"
	if [ -n "$plugin_grapi_socket_path" ]; then
		KOPANO_GRAPI_SOCKETS="${plugin_grapi_socket_path}"
	fi
	export KOPANO_GRAPI_SOCKETS

	# Plugin pubs environment.

	if [ -z "$plugin_pubs_secret_key" ]; then
		if [ ! -f "${DEFAULT_PLUGIN_PUBS_SECRET_KEY_FILE}" -a "$SETUP" = "1" -a -n "$USER" ]; then
			>&2	echo "setup: creating new secret key at ${DEFAULT_PLUGIN_PUBS_SECRET_KEY_FILE} ..."
			tr -dc 'a-f0-9' < /dev/urandom 2>/dev/null | dd bs=1 count=64 of="${DEFAULT_PLUGIN_PUBS_SECRET_KEY_FILE}" 2>/dev/null && chown "$USER" "${DEFAULT_PLUGIN_PUBS_SECRET_KEY_FILE}"
		fi
		if [ -f "${DEFAULT_PLUGIN_PUBS_SECRET_KEY_FILE}" ]; then
			# Fallback to default when not set but default location exists.
			plugin_pubs_secret_key="${DEFAULT_PLUGIN_PUBS_SECRET_KEY_FILE}"
		fi
	fi
	if [ -n "$plugin_pubs_secret_key" ]; then
		if [ ! -f "$plugin_pubs_secret_key" ]; then
			>&2 echo "Error: $plugin_pubs_secret_key: plugin_pubs_secret_key value invalid, not found or is not a file"
			exit 1
		fi
		KOPANO_PUBS_SECRET_KEY=$(cat "$plugin_pubs_secret_key")
	fi
	export KOPANO_PUBS_SECRET_KEY

	# Plugin kvs environment.

	if [ -z "$plugin_kvs_db_drivername" -a -z "$plugin_kvs_db_datasource" ]; then
		plugin_kvs_db_datasource="${KOPANO_KVS_DB_DATASOURCE:-${DEFAULT_PLUGIN_KVS_DB_DATASOURCE}}"
	fi
	if [ -z "$plugin_kvs_db_drivername" ]; then
		plugin_kvs_db_drivername="${KOPANO_KVS_DB_DRIVER:-${DEFAULT_PLUGIN_KVS_DRIVERNAME}}"
	fi
	if [ -z "$plugin_kvs_db_migrations" ]; then
		plugin_kvs_db_migrations="${KOPANO_KVS_DB_MIGRATIONS:-${DEFAULT_PLUGIN_KVS_DB_MIGRATIONS}}"
	fi
	export KOPANO_KVS_DB_DRIVER="${plugin_kvs_db_drivername}"
	export KOPANO_KVS_DB_DATASOURCE="${plugin_kvs_db_datasource}"
	export KOPANO_KVS_DB_MIGRATIONS="${plugin_kvs_db_migrations}"
}

# Handle parameters for configuration.

case "${1}" in
	setup)
		# Setup and initialize keys.
		export SETUP=1

		# Initialize environment.
		setup_env

		# Setup subcommand does nothing.
		exit 0

		;;

	serve)
		# Inject values from environment into command line. This is mainly used
		# when this script is run from systemd or docker.

		# kapid basics

		if [ -z "$plugins_path" ]; then
			plugins_path=$DEFAULT_PLUGINS_PATH
		fi

		if [ -n "$oidc_issuer_identifier" ]; then
			if [ -n "$OIDC_ISSUER_IDENTIFIER" ]; then
				>&2	echo "Warning: duplicate setting of issuer identifier - using value from environment"
				oidc_issuer_identifier="$OIDC_ISSUER_IDENTIFIER"
			fi
		fi
		if [ -z "$oidc_issuer_identifier" ]; then
			# NOTE(longsleep): Not sure if this is the best idea/default but at least
			# having a default will let the service start.
			oidc_issuer_identifier=${OIDC_ISSUER_IDENTIFIER:-${DEFAULT_OIDC_ISSUER_IDENTIFIER}}
		fi

		if [ "$insecure" = "yes" ]; then
			set -- "$@" --insecure
		fi

		if [ -n "$plugins" ]; then
			set -- "$@" --plugins="$plugins"
		fi

		if [ -n "$listen" ]; then
			set -- "$@" --listen="$listen"
		fi

		if [ -n "$log_level" ]; then
			set -- "$@" --log-level="$log_level"
		fi

		set -- "$@" --plugins-path="$plugins_path" --iss="$oidc_issuer_identifier"

		# Initialize environment.
		setup_env

		;;

	*)
		;;
esac

# Set executable.

set -- ${EXE} "$@"

# Run.

exec "$@"
